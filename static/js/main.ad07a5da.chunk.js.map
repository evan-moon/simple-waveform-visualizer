{"version":3,"sources":["components/Header.js","actions/index.js","actions/actionTypes.js","lib/Tracks/AudioTrack.js","lib/Tracks/Track.js","constants.js","components/Timeline.js","components/SubHeader.js","utils.js","lib/effects/Effect.js","lib/effects/Filter.js","lib/effects/AlgorithmReverb.js","lib/effects/index.js","lib/effects/Compressor.js","lib/effects/ConvolutionReverb.js","lib/effects/Delay.js","lib/effects/GraphicEQ.js","lib/effects/Tremolo.js","components/TrackController.js","lib/WaveForm.js","components/WaveFormViewer.js","components/TrackBars.js","components/Editor.js","App.js","serviceWorker.js","reducers/index.js","store.js","index.js"],"names":["mapDispatchToProps","playAllTracks","type","stopAllTracks","StyledHeader","styled","header","connect","props","ButtonGroup","Button","onClick","variant","className","AudioTrack","context","audioBuffer","sampleRate","audioFile","this","audioContext","decodeAudioData","then","buffer","sourceBuffer","createBufferSource","gainNode","destination","AudioContext","peaks","id","Date","getTime","name","createGain","effects","isPlaying","gain","value","loop","start","stop","effect","lastNode","length","outputNode","disconnect","inputNode","effectId","newEffect","originEffectorIndex","findIndex","e","originEffector","prevNode","targetNode","index","filter","WaveFormColors","StyledTimeline","div","StyledRuler","Ruler","Array","fill","map","el","data-time","key","Timeline","rulerLength","addAudioTrack","audioTrack","payload","Styled","tracks","fileUploaderRef","useRef","Row","noGutters","Col","xs","size","current","click","ref","onChange","file","currentTarget","files","reader","FileReader","onload","onloadEvent","audio","setAudio","target","result","readAsArrayBuffer","style","display","fromTitleCaseToStartCase","string","replace","Effect","defaultOption","options","constructor","Object","assign","setValueAtTime","currentTime","Filter","frequency","q","filterNode","createBiquadFilter","Q","LowPassFilter","HighPassFilter","LowPassCombFilter","delay","resonance","delayNode","createDelay","delayTime","AlgorithmReverb","mix","roomSize","dampening","wetNode","dryNode","splitter","createChannelSplitter","merger","createChannelMerger","combFilters","delayPerSecond","allFilters","combLeft","slice","combRight","forEach","combFilter","setResonance","setFrequency","Effects","threshold","knee","attack","release","ratio","compressorNode","createDynamicsCompressor","t","time","decay","reverbNode","createConvolver","_generateImpulseResponse","impulse","createBuffer","leftImpulse","getChannelData","rightImpulse","i","Math","random","pow","feedback","feedbackNode","setTime","setFeedback","frequencies","defaultQ","filters","_generateFilter","find","node","reduce","prev","speed","depth","tremoloNode","shaperNode","createWaveShaper","curve","Float32Array","lfoNode","createOscillator","EffectsName","StyledTrackController","updateTrackName","trackId","trackName","addEffect","effector","changeEffect","newEffector","removeEffect","eventKey","Effector","split","newEffectIndex","parseInt","data-track-id","defaultValue","Dropdown","drop","as","Toggle","Menu","Item","onSelect","effectName","DropdownButton","title","WaveForm","Error","sampleSize","sampleStep","floor","numberOfChannels","mergedPeaks","channelIndex","v","newPeakIndex","end","min","max","sampleIndex","svgBox","pathGroup","setAttribute","parsePeaks","totalPeaks","d","peakNumber","shift","path","document","createElementNS","setAttributeNS","appendChild","StyledTrack","lighten","color","WaveFormViewer","track","svgRef","pathRef","useEffect","draw","preserveAspectRatio","StyledTrackBars","StyledContainer","Editor","Container","fluid","App","Boolean","window","location","hostname","match","initialState","trackReducer","state","action","setName","play","rootReducer","logger","createLogger","createStore","reducers","applyMiddleware","ReactDOM","render","store","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ad07a5da.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { playAllTracks, stopAllTracks } from 'src/actions';\nimport { ButtonGroup, Button } from 'react-bootstrap';\n\nconst mapDispatchToProps = {\n  playAllTracks,\n  stopAllTracks,\n};\n\nconst StyledHeader = styled.header`\n  width: 100%;\n  background-color: #333333;\n  padding: .5rem;\n  input[type=\"file\"] {\n    display: none;\n  }\n`;\n\nfunction Header (props) {\n  function onClickPlayButton () {\n    props.playAllTracks();\n  }\n\n  function onClickStopButton () {\n    props.stopAllTracks();\n  }\n\n  return (\n    <StyledHeader>\n      <ButtonGroup>\n        <Button onClick={onClickPlayButton} variant=\"success\">\n          <i className=\"fas fa-play\"></i>\n        </Button>\n        <Button onClick={onClickStopButton} variant=\"secondary\">\n          <i className=\"fas fa-stop\"></i>\n        </Button>\n      </ButtonGroup>\n    </StyledHeader>\n  );\n}\n\nexport default connect(null, mapDispatchToProps)(Header);","import * as types from './actionTypes';\n\nexport const addAudioTrack = (audioTrack) => {\n  return {\n    type: types.ADD_AUDIO_TRACK,\n    payload: { audioTrack },\n  };\n};\n\nexport const removeTrack = (trackId) => {\n  return {\n    type: types.REMOVE_TRACK,\n    payload: { trackId },\n  };\n};\n\nexport const updateTrackName = (trackId, trackName) => {\n  return {\n    type: types.UPDATE_TRACK_NAME,\n    payload: { trackId, trackName },\n  };\n};\n\nexport const addEffect = (trackId, effector) => {\n  return {\n    type: types.ADD_EFFECT,\n    payload: { trackId, effector },\n  };\n};\n\nexport const changeEffect = (trackId, effectId, newEffector) => {\n  return {\n    type: types.CHANGE_EFFECT,\n    payload: { trackId, effectId, newEffector },\n  };\n};\n\nexport const removeEffect = (trackId, effectId) => {\n  return {\n    type: types.REMOVE_EFFECT,\n    payload: { trackId, effectId },\n  };\n};\n\nexport const playAllTracks = () => {\n  return { type: types.PLAY_ALL_TRACKS };\n};\n\nexport const stopAllTracks = () => {\n  return { type: types.STOP_ALL_TRACKS };\n};\n","export const ADD_AUDIO_TRACK = 'ADD_AUDIO_TRACK';\nexport const REMOVE_TRACK = 'REMOVE_TRACK';\n\nexport const UPDATE_TRACK_NAME = 'UPDATE_TRACK_NAME';\nexport const ADD_EFFECT = 'ADD_EFFECT';\nexport const CHANGE_EFFECT = 'CHANGE_EFFECT';\nexport const REMOVE_EFFECT = 'REMOVE_EFFECT';\n\nexport const PLAY_ALL_TRACKS = 'PLAY_ALL_TRACKS';\nexport const STOP_ALL_TRACKS = 'STOP_ALL_TRACKS';","import { Track } from 'lib/Tracks/Track';\n\nexport class AudioTrack extends Track {\n  constructor (context) {\n    super(context);\n    this.audioBuffer = null;\n    this.sampleRate = 0;\n  }\n\n  setAudio (audioFile) {\n    return this.audioContext.decodeAudioData(audioFile).then(buffer => {\n      this.audioBuffer = buffer;\n      this.sampleRate = buffer.sampleRate;\n      this.sourceBuffer = this.audioContext.createBufferSource();\n      this.sourceBuffer.buffer = buffer;\n      this.sourceBuffer.connect(this.gainNode);\n      this.gainNode.connect(this.audioContext.destination);\n    });\n  }\n\n  reset () {\n    this.audioContext = new AudioContext();\n    this.audioBuffer = null;\n    this.sampleRate = 0;\n    this.peaks = [];\n  }\n}","export class Track {\n  constructor (context) {\n    this.id = `track-${new Date().getTime()}`;\n    this.name = this.id;\n    this.audioContext = context;\n    this.gainNode = this.audioContext.createGain();\n    this.effects = [];\n    this.sourceBuffer = this.audioContext.createBufferSource();\n    this.effects = [];\n    this.isPlaying = false;\n  }\n\n  setName (name) {\n    this.name = name;\n  }\n\n  mute () {\n    this.gainNode.gain.value = 0;\n  }\n\n  setGain (value) {\n    this.gainNode.gain.value = value;\n  }\n\n  play () {\n    this.sourceBuffer.loop = true; // For Test\n    this.sourceBuffer.start();\n    this.isPlaying = true;\n  }\n\n  stop () {\n    this.sourceBuffer.stop();\n    this.isPlaying = false;\n  }\n\n  addEffect (effect) {\n    const lastNode = this.effects.length > 0\n      ? this.effects[this.effects.length - 1].outputNode\n      : this.sourceBuffer;\n\n    lastNode.disconnect();\n    lastNode.connect(effect.inputNode);\n    effect.outputNode.connect(this.gainNode);\n\n    this.effects = [...this.effects, effect];\n  }\n\n  changeEffect (effectId, newEffect) {\n    const originEffectorIndex = this.effects.findIndex(e => e.id === effectId);\n    const originEffector = this.effects[originEffectorIndex];\n\n    const prevNode = originEffectorIndex === 0\n      ? this.sourceBuffer\n      : this.effects[originEffectorIndex - 1].outputNode;\n    const targetNode = this.effects[originEffectorIndex + 1]\n      ? this.effects[originEffectorIndex + 1].inputNode\n      : this.gainNode;\n\n    prevNode.disconnect();\n    originEffector.outputNode.disconnect();\n\n    prevNode.connect(newEffect.inputNode);\n    newEffect.outputNode.connect(targetNode);\n\n    this.effects[originEffectorIndex] = newEffect;\n    this.effects = [...this.effects];\n  }\n\n  removeEffect (effectId) {\n    const index = this.effects.findIndex(e => e.id === effectId);\n    if (!~index) {\n      return;\n    }\n\n    const prevNode = index === 0\n      ? this.sourceBuffer\n      : this.effects[index - 1].outputNode;\n    const targetNode = this.effects[index + 1]\n      ? this.effects[index + 1].inputNode\n      : this.gainNode;\n\n    prevNode.disconnect();\n    prevNode.connect(targetNode);\n\n    this.effects = this.effects.filter(e => e.id !== effectId);\n  }\n}","export const AsideDefaultWidth = 3; // grid\nexport const TimelineDefaultWidth = 12 - AsideDefaultWidth;\nexport const WaveFormColors = ['#00CED1', '#8A2BE2 ', '#A52A2A', '#FF6347', '#00008B', '#DC143C', '#006400'];","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledTimeline = styled.div`\n  height: 100%;\n  background-color: #444444;\n`;\nconst StyledRuler = styled.div`\n  width: 100%;\n  height: 100%;\n  white-space: nowrap;\n  span.graduation {\n    display: inline-block;\n    width: 1px;\n    background-color: #222222;\n    margin-right: .5rem;\n    margin-top: 23px;\n    > span {\n      font-size: .5rem;\n      position: absolute;\n      transform: translate(-50%, -100%);\n      letter-spacing: -1px;\n    }\n    &[data-time=\"second\"] {\n      height: 20%;\n    }\n    &[data-time=\"minute\"] {\n      height: 30%;\n    }\n  }\n`;\n\nconst defaultLength = 300; // minute\n\nexport const Ruler = ({ length }) => {\n  return (\n    <StyledRuler className=\"ruler\">\n      {Array(length).fill(0).map((el, index) => {\n        return index % 60 === 0\n          ? (\n            <span className=\"graduation\" data-time=\"minute\" key={index}>\n              {/*<span>{index}</span>*/}\n            </span>)\n          : (\n            <span className=\"graduation\" data-time=\"second\" key={index}>\n              {/*<span>{index}</span>*/}\n            </span>\n          );\n      })}\n    </StyledRuler>\n  );\n};\n\nexport default function Timeline ({ length }) {\n  const rulerLength = length || defaultLength;\n  return (\n    <StyledTimeline>\n      <Ruler length={rulerLength} />\n    </StyledTimeline>\n  );\n}","import React, { useRef } from 'react';\nimport { Row, Col, Button } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { addAudioTrack } from 'src/actions';\nimport { AudioTrack } from 'lib/Tracks/AudioTrack';\nimport { AsideDefaultWidth, TimelineDefaultWidth } from 'src/constants';\nimport Timeline from 'components/Timeline';\n\nconst mapStateToProps = ({ tracks, audioContext }) => {\n  return {\n    tracks,\n    audioContext,\n  };\n};\n\nconst mapDispatchToProps = {\n  addAudioTrack,\n};\n\nconst Styled = styled.div`\n  background-color: #000000;\n  .track-control {\n    padding: .5rem;\n    background-color: #555555;\n  }\n`;\n\nfunction SubHeader (props) {\n  const fileUploaderRef = useRef();\n\n  function onClickUploadButton () {\n    fileUploaderRef.current.click();\n  }\n\n  function onChangeFileUploader (e) {\n    const file = e.currentTarget.files[0];\n    if (!file) {\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.onload = onloadEvent => {\n      const audio = new AudioTrack(props.audioContext);\n      audio.setAudio(onloadEvent.target.result).then(() => {\n        props.addAudioTrack(audio);\n      });\n    };\n    reader.readAsArrayBuffer(file);\n  }\n\n  return (\n    <Styled>\n      <Row noGutters={true}>\n        <Col xs={AsideDefaultWidth} className=\"track-control\">\n          <Button\n            variant=\"secondary\"\n            size=\"sm\"\n            onClick={onClickUploadButton}>+</Button>\n        </Col>\n        <Col xs={TimelineDefaultWidth}>\n          <Timeline />\n        </Col>\n        <input ref={fileUploaderRef} onChange={onChangeFileUploader} type=\"file\" style={{ display: 'none' }} />\n      </Row>\n    </Styled>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SubHeader);","export function fromTitleCaseToStartCase (string) {\n  return string.replace(/(.)([A-Z])/g, '$1 $2');\n}","import { fromTitleCaseToStartCase } from 'src/utils';\n\nexport class Effect {\n  constructor (context, defaultOption, options) {\n    this.id = `effector-${new Date().getTime()}`;\n    this.name = fromTitleCaseToStartCase(this.constructor.name);\n    this.context = context;\n    this.options = Object.assign({}, defaultOption, options);\n    this.inputNode = this.context.createGain();\n    this.outputNode = this.context.createGain();\n  }\n\n  setGain (gain) {\n    this.options.gain = gain;\n    this.outputNode.gain.setValueAtTime(gain, this.context.currentTime);\n  }\n}","import { Effect } from './Effect';\n\nclass Filter extends Effect {\n  constructor (context, options, type) {\n    const defaultOption = {\n      frequency: 350,\n      q: 1,\n    };\n    super(context, defaultOption, options);\n\n    this.filterNode = context.createBiquadFilter();\n    this.filterNode.type = type;\n    this.filterNode.frequency.setValueAtTime(this.options.frequency, this.context.currentTime);\n    this.filterNode.Q.setValueAtTime(this.options.q, this.context.currentTime);\n\n    this.inputNode.connect(this.filterNode);\n    this.filterNode.connect(this.outputNode);\n  }\n\n  setFrequency (value) {\n    // LPF, HPF의 min, max 정해줘야 할듯? 현재는 1~22050\n    this.filterNode.frequency.setValueAtTime(value, this.context.currentTime);\n  }\n\n  setQ (value) {\n    this.filterNode.Q.setValueAtTime(value, this.context.currentTime);\n  }\n}\n\nexport class LowPassFilter extends Filter {\n  constructor (context, options) {\n    super(context, options, 'lowpass');\n  }\n}\n\nexport class HighPassFilter extends Filter {\n  constructor (context, options) {\n    super(context, options, 'highpass');\n  }\n}\n\nexport class LowPassCombFilter {\n  constructor (context, options) {\n    const defaultOption = {\n      frequency: 440,\n      delay: 0.7,\n      resonance: 0.5,\n    };\n\n    this.context = context;\n    this.options = Object.assign({}, defaultOption, options);\n\n    const { frequency, delay, resonance } = this.options;\n\n    this.inputNode = this.context.createGain();\n    this.filterNode = this.context.createBiquadFilter({ type: 'lowpass', frequency });\n    this.delayNode = this.context.createDelay(delay);\n    this.gainNode = this.context.createGain();\n    this.outputNode = this.context.createGain();\n    this.gainNode.gain.setValueAtTime(resonance, context.currentTime);\n\n    this.inputNode\n      .connect(this.delayNode)\n      .connect(this.filterNode)\n      .connect(this.gainNode)\n      .connect(this.inputNode)\n      .connect(this.outputNode);\n  }\n\n  setFrequency (value) {\n    this.filterNode.frequency.setValueAtTime(value, this.context.currentTime);\n  }\n\n  setDelay (value) {\n    this.delayNode.delayTime.setValueAtTime(value, this.context.currentTime);\n  }\n\n  setResonance (value) {\n    this.options.resonance = value;\n    this.gainNode.gain.setValueAtTime(value, this.context.currentTime);\n  }\n}\n","import { LowPassCombFilter } from './Filter';\nimport { Effect } from './Effect';\n\nexport class AlgorithmReverb extends Effect {\n  constructor (context, options) {\n    const defaultOption = {\n      mix: 0.5,\n      roomSize: 3,\n      dampening: 3,\n    };\n    super(context, defaultOption, options);\n    const sampleRate = context.sampleRate;\n\n    this.wetNode = this.context.createGain();\n    this.dryNode = this.context.createGain();\n    this.splitter = this.context.createChannelSplitter(2);\n    this.merger = this.context.createChannelMerger(2);\n\n    this.combFilters = [1557, 1617, 1491, 1422, 1277, 1356, 1188, 1116].map(delayPerSecond => {\n      return new LowPassCombFilter(this.context, {\n        delay: delayPerSecond / sampleRate,\n        frequency: this.options.dampening,\n      });\n    });\n    this.allFilters = [225, 556, 441, 341].map(frequency => this.context.createBiquadFilter({ type: 'allpass', frequency }));\n\n    const combLeft = this.combFilters.slice(0, 1);\n    const combRight = this.combFilters.slice(7);\n\n    this.inputNode.connect(this.wetNode).connect(this.splitter);\n    this.inputNode.connect(this.dryNode).connect(this.outputNode);\n\n    combLeft.forEach(combFilter => {\n      this.splitter.connect(combFilter.inputNode, 0);\n      combFilter.outputNode.connect(this.merger, 0, 0);\n    });\n    combRight.forEach(combFilter => {\n      this.splitter.connect(combFilter.inputNode, 1)\n      combFilter.outputNode.connect(this.merger, 0, 1);\n    });\n\n    this.merger\n      .connect(this.allFilters[0])\n      .connect(this.allFilters[1])\n      .connect(this.allFilters[2])\n      .connect(this.allFilters[3])\n      .connect(this.outputNode);\n  }\n\n  setMix (value) {\n    // 0 ~ 1 (dry ~ wet)\n    this.options.mix = value;\n    this.wetNode.gain.value = value;\n    this.dryNode.gain.value = 1 - value;\n  }\n\n  setRoomSize (value) {\n    this.combFilters.forEach(combFilter => combFilter.setResonance(value));\n  }\n\n  setDampening (value) {\n    this.combFilters.forEach(combFilter => combFilter.setFrequency(value));\n  }\n}","import { AlgorithmReverb } from './AlgorithmReverb';\nimport { Compressor } from './Compressor';\nimport { ConvolutionReverb } from './ConvolutionReverb';\nimport { Delay } from './Delay';\nimport { LowPassFilter, HighPassFilter, LowPassCombFilter } from './Filter';\nimport { GraphicEQ } from './GraphicEQ';\nimport { Tremolo } from './Tremolo';\nimport { fromTitleCaseToStartCase } from 'src/utils';\n\nexport const Effects = [\n  Compressor,\n  ConvolutionReverb,\n  AlgorithmReverb,\n  Delay,\n  LowPassFilter,\n  HighPassFilter,\n  LowPassCombFilter,\n  GraphicEQ,\n  Tremolo\n];\n\nexport const EffectsName = Effects.map(effect => {\n  return fromTitleCaseToStartCase(effect.name);\n});","import { Effect } from './Effect';\n\nexport class Compressor extends Effect {\n  constructor (context, options) {\n    const defaultOption = {\n      threshold: -24,\n      knee: 30,\n      attack: 0.003,\n      release: 0.250,\n      ratio: 12,\n    };\n    super(context, defaultOption, options);\n    this.compressorNode = context.createDynamicsCompressor();\n\n    const t = this.context.currentTime;\n    this.compressorNode.threshold.setValueAtTime(this.options.threshold, t);\n    this.compressorNode.knee.setValueAtTime(this.options.knee, t);\n    this.compressorNode.attack.setValueAtTime(this.options.attack, t);\n    this.compressorNode.release.setValueAtTime(this.options.release, t);\n    this.compressorNode.ratio.setValueAtTime(this.options.ratio, t);\n\n    this.inputNode.connect(this.compressorNode);\n    this.compressorNode.connect(this.outputNode);\n  }\n\n  setThreshold (value) {\n    const t = this.context.currentTime;\n    this.compressorNode.threshold.setValueAtTime(value, t);\n  }\n\n  setKnee (value) {\n    const t = this.context.currentTime;\n    this.compressorNode.knee.setValueAtTime(value, t);\n  }\n\n  setAttack (value) {\n    const t = this.context.currentTime;\n    this.compressorNode.attack.setValueAtTime(value, t);\n  }\n\n  setRelease (value) {\n    const t = this.context.currentTime;\n    this.compressorNode.release.setValueAtTime(value, t);\n  }\n\n  setRatio (value) {\n    const t = this.context.currentTime;\n    this.compressorNode.ratio.setValueAtTime(value, t);\n  }\n}","import { Effect } from './Effect';\n\nexport class ConvolutionReverb extends Effect {\n  constructor (context, options) {\n    const defaultOption = {\n      mix: 0.5,\n      time: 0.01,\n      decay: 0.01,\n    };\n    super(context, defaultOption, options);\n\n    this.reverbNode = context.createConvolver();\n    this.wetNode = context.createGain();\n    this.dryNode = context.createGain();\n\n    this.inputNode.connect(this.reverbNode);\n    this.inputNode.connect(this.dryNode);\n\n    this.reverbNode.connect(this.wetNode);\n\n    this.wetNode.connect(this.outputNode);\n    this.dryNode.connect(this.outputNode);\n\n    this._generateImpulseResponse();\n  }\n\n  setMix (value) {\n    // 0 ~ 1 (dry ~ wet)\n    this.options.mix = value;\n    this.wetNode.gain.value = value;\n    this.dryNode.gain.value = 1 - value;\n  }\n\n  setTime (value) {\n    this.options.time = value;\n    this._generateImpulseResponse();\n  }\n\n  setDecay (value) {\n    this.options.decay = value;\n    this._generateImpulseResponse();\n  }\n\n  _generateImpulseResponse () {\n    const sampleRate = this.context.sampleRate;\n    const length = sampleRate * this.options.time;\n    const impulse = this.context.createBuffer(2, length, sampleRate);\n\n    const leftImpulse = impulse.getChannelData(0);\n    const rightImpulse = impulse.getChannelData(1);\n\n    const decay = this.options.decay;\n    for (let i = 0; i < length; i ++) {\n      leftImpulse[i] = (Math.random() * 2 - 1) * Math.pow(1 - i / length, decay);\n      rightImpulse[i] = (Math.random() * 2 - 1) * Math.pow(1 - i / length, decay);\n    }\n\n    if (this.reverbNode.buffer) {\n      this.inputNode.disconnect(this.reverbNode);\n      this.reverbNode.disconnect(this.wetNode);\n\n      this.reverbNode = this.context.createConvolver();\n      this.inputNode.connect(this.reverbNode);\n      this.reverbNode.connect(this.wetNode);\n    }\n\n    this.reverbNode.buffer = impulse;\n  }\n}\n","import { Effect } from './Effect';\n\nexport class Delay extends Effect {\n  constructor (context, options) {\n    const defaultOption = {\n      mix: 0.5,\n      feedback: 0.5,\n      time: 0.3,\n    };\n    super(context, defaultOption, options);\n\n    this.dryNode = this.context.createGain();\n    this.wetNode = this.context.createGain();\n    this.feedbackNode = this.context.createGain();\n    this.delayNode = this.context.createDelay();\n\n    this.inputNode.connect(this.dryNode);\n    this.dryNode.connect(this.outputNode);\n\n    // Feedback Loop\n    this.delayNode.connect(this.feedbackNode);\n    this.feedbackNode.connect(this.delayNode);\n\n    this.inputNode.connect(this.delayNode);\n    this.delayNode.connect(this.wetNode);\n    this.wetNode.connect(this.outputNode);\n\n    this.setTime(this.options.time);\n    this.setFeedback(this.options.feedback);\n  }\n\n  setMix (value) {\n    this.options.mix = value;\n    this.wetNode.gain.value = value;\n    this.dryNode.gain.value = 1 - value;\n  }\n\n  setTime (value) {\n    this.options.time = value;\n    this.delayNode.delayTime.setValueAtTime(value, this.context.currentTime);\n  }\n\n  setFeedback (value) {\n    this.options.feedback = value;\n    this.feedbackNode.gain.setValueAtTime(value, this.context.currentTime);\n  }\n}","import { Effect } from './Effect';\n\nexport class GraphicEQ extends Effect {\n  constructor (context) {\n    super(context);\n    this.frequencies = [\n      25, 31, 40, 50, 63, 80, 100, 125, 160, 200,\n      250, 315, 400, 500, 630, 800, 1000, 1250, 1600, 2000,\n      2500, 3150, 4000, 5000, 6300, 8000, 10000, 12500, 16000, 20000\n    ];\n    this.defaultQ = 1;\n    this.filters = [];\n    this._generateFilter();\n  }\n\n  getFilters () {\n    return this.filters;\n  }\n\n  setFrequencyGain (frequency, gain) {\n    const filter = this.filters.find(filter => filter.frequency === frequency);\n    filter.node.gain.setValueAtTime(gain, this.context.currentTime);\n  }\n\n  setGain (gain) {\n    this.outputNode.gain.value = gain;\n  }\n\n  _generateFilter () {\n    const frequencies = this.frequencies;\n\n    this.filters = frequencies.map((frequency, index) => {\n      const filterNode = this.context.createBiquadFilter();\n      filterNode.gain.value = 0;\n      filterNode.frequency.setValueAtTime(frequency, this.context.currentTime);\n      filterNode.Q.setValueAtTime(this.defaultQ, this.context.currentTime);\n      if (index === 0) {\n        filterNode.type = 'lowshelf';\n      }\n      else if (index === frequencies.length - 1) {\n        filterNode.type = 'highshelf';\n      }\n      else {\n        filterNode.type = 'peaking';\n      }\n      return { frequency, node: filterNode };\n    });\n\n    this.filters.reduce((prev, current) => {\n      prev.node.connect(current.node);\n      return current;\n    }, { node: this.inputNode });\n\n    this.filters[this.filters.length - 1].node.connect(this.outputNode);\n  }\n}","import { Effect } from './Effect';\n\nexport class Tremolo extends Effect {\n  constructor (context, options) {\n    const defaultOption = {\n      speed: 4,\n      depth: 1,\n      mix: 0.8,\n    };\n    super(context, defaultOption, options);\n\n    this.wetNode = this.context.createGain();\n    this.dryNode = this.context.createGain();\n\n    this.tremoloNode = this.context.createGain();\n    this.tremoloNode.gain.value = 0;\n\n    this.shaperNode = this.context.createWaveShaper();\n    this.shaperNode.curve = new Float32Array([ 0, 1 ]);\n    this.shaperNode.connect(this.tremoloNode.gain);\n\n    this.lfoNode = this.context.createOscillator();\n    this.lfoNode.connect(this.shaperNode);\n    this.lfoNode.type = 'sine';\n\n    this.inputNode.connect(this.dryNode);\n    this.dryNode.connect(this.outputNode);\n\n    this.lfoNode.start(0);\n    this.inputNode.connect(this.tremoloNode);\n    this.tremoloNode.connect(this.wetNode);\n    this.wetNode.connect(this.outputNode);\n  }\n\n  setMix (value) {\n    this.options.mix = value;\n    this.wetNode.gain.value = value;\n    this.dryNode.gain.value = 1 - value;\n  }\n\n  setSpeed (value) {\n    this.options.speed = value;\n    this.lfoNode.frequency.value = value;\n  }\n\n  setDepth (value) {\n    this.options.depth = value;\n    this.shaperNode.curve = new Float32Array([ 1 - value, 1]);\n  }\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { updateTrackName, addEffect, changeEffect, removeEffect } from 'src/actions';\nimport { Button, ButtonGroup, Dropdown, DropdownButton } from 'react-bootstrap';\nimport { Effects, EffectsName } from 'lib/effects';\n\nconst StyledTrackController = styled.div`\n  input[type=\"text\"] {\n    background-color: transparent;\n    color: #ffffff;\n    border: none;\n  }\n  div.effect-control {\n    margin-top: 1rem;\n    label {\n      color: #bbbbbb;\n      font-size: .8rem;\n    }\n    ul.effect-list {\n      margin: 0;\n      padding: 0;\n      li {\n        margin-bottom: .5rem;\n        &:last-child {\n          margin-bottom: 0;\n        }\n        .effect-box {\n          width: 100%;\n        }\n        button {\n          font-size: .8rem;\n        }\n      }\n      .effect-option-button {\n        flex: 1 1 100%;\n      }\n      .effect-change-button {\n        flex: auto;\n        width: auto;\n      }\n      .add-effect button {\n        width: 100%;\n        &::after {\n          border: none;\n        }\n      }\n    }\n  }\n`;\n\nconst mapStateToProps = ({ audioContext }) => {\n  return { audioContext };\n};\n\nconst mapDispatchToProps = {\n  updateTrackName,\n  addEffect,\n  changeEffect,\n  removeEffect,\n};\n\nfunction TrackController (props) {\n  function onChangeTrackName (e) {\n    props.updateTrackName(props.trackId, e.target.value);\n  }\n\n  function addEffect (eventKey) {\n    const Effector = Effects[eventKey];\n    props.addEffect(props.trackId, new Effector(props.audioContext));\n  }\n\n  function changeEffect (eventKey) {\n    let [effectId, newEffectIndex] = eventKey.split(',');\n    newEffectIndex = parseInt(newEffectIndex);\n    const Effector = Effects[newEffectIndex];\n    props.changeEffect(props.trackId, effectId, new Effector(props.audioContext));\n  }\n\n  function removeEffect (effectId) {\n    props.removeEffect(props.trackId, effectId);\n  }\n\n  return (\n    <StyledTrackController data-track-id={props.trackId}>\n      <input type=\"text\" defaultValue={props.trackName} onChange={onChangeTrackName} />\n      <div className=\"effect-control\">\n        <label>Effects</label>\n        <ul className=\"effect-list\">\n          {props.effects.map(effect => (\n            <li key={effect.id}>\n              <Dropdown drop=\"right\" variant=\"secondary\" as={ButtonGroup} className=\"effect-box\">\n                <Button variant=\"secondary\" className=\"effect-option-button\">{effect.name}</Button>\n                <Dropdown.Toggle split variant=\"secondary\" className=\"effect-change-button\" />\n                <Dropdown.Menu>\n                  <Dropdown.Item eventKey={effect.id} onSelect={removeEffect}>Unset</Dropdown.Item>\n                  {EffectsName.map((effectName, index) => (\n                    <Dropdown.Item\n                      key={index}\n                      eventKey={`${effect.id},${index}`}\n                      onSelect={changeEffect}>{effectName}</Dropdown.Item>\n                  ))}\n                </Dropdown.Menu>\n              </Dropdown>\n            </li>\n          ))}\n          <li className=\"add-effect\">\n            <DropdownButton title=\"+\" drop=\"right\" variant=\"secondary\">\n              {EffectsName.map((effectName, index) => (\n                <Dropdown.Item key={index} eventKey={index} onSelect={addEffect}>{effectName}</Dropdown.Item>\n              ))}\n            </DropdownButton>\n          </li>\n        </ul>\n      </div>\n    </StyledTrackController>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TrackController);","export class WaveForm {\n constructor (audio) {\n   if (!audio) {\n     throw new Error('WaveForm needs Audio object');\n   }\n   this.audio = audio;\n }\n\n  parsePeaks () {\n    const buffer = this.audio.audioBuffer;\n    const sampleRate = this.audio.sampleRate;\n\n    const sampleSize = buffer.length / sampleRate;\n    const sampleStep = Math.floor(sampleSize / 10) || 1;\n    const numberOfChannels = buffer.numberOfChannels;\n    const mergedPeaks = [];\n\n    for (let channelIndex = 0; channelIndex < numberOfChannels; channelIndex++) {\n      const peaks = buffer.getChannelData(channelIndex);\n\n      Array(sampleRate).fill().forEach((v, newPeakIndex) => {\n        const start = Math.floor(newPeakIndex * sampleSize);\n        const end = Math.floor(start + sampleSize);\n        let min = peaks[0];\n        let max = peaks[0];\n\n        for (let sampleIndex = start; sampleIndex < end; sampleIndex += sampleStep) {\n          const v = peaks[sampleIndex];\n\n          if (v > max) {\n            max = v;\n          }\n          else if (v < min) {\n            min = v;\n          }\n        }\n\n        if (channelIndex === 0 || max > mergedPeaks[2 * newPeakIndex]) {\n          mergedPeaks[2 * newPeakIndex] = max;\n        }\n        if (channelIndex === 0 || min < mergedPeaks[2 * newPeakIndex + 1]) {\n          mergedPeaks[2 * newPeakIndex + 1] = min;\n        }\n      });\n    }\n\n    return mergedPeaks;\n  }\n\n draw ({ svgBox, pathGroup }) {\n   const sampleRate = this.audio.sampleRate;\n\n   svgBox.setAttribute('viewBox', `0 -1 ${sampleRate} 2`);\n\n   const audioBuffer = this.audio.audioBuffer;\n   const peaks = this.parsePeaks();\n   if (audioBuffer) {\n     const totalPeaks = peaks.length;\n\n     let d = '';\n     for(let peakNumber = 0; peakNumber < totalPeaks; peakNumber++) {\n       if (peakNumber % 2 === 0) {\n         d += ` M${Math.floor(peakNumber / 2)}, ${peaks.shift()}`;\n       }\n       else {\n         d += ` L${Math.floor(peakNumber / 2)}, ${peaks.shift()}`;\n       }\n     }\n\n     const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n     path.setAttributeNS(null, 'd', d);\n\n     pathGroup.appendChild(path);\n   }\n }\n}","import React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { lighten } from 'polished'\nimport { WaveForm } from 'lib/WaveForm';\n\nconst StyledTrack = styled.div`\n  display: inline-block;\n  width: 100%;\n  height: 100%;\n  svg {\n    stroke: ${props => lighten(0.5, props.color)};\n    width: 100%;\n    height: 100%;\n    background-color: ${props => props.color};\n  }\n  g {\n    width: 100%;\n    height: 20vh;\n  }\n`;\n\nexport default function WaveFormViewer ({ track, color }) {\n  const svgRef = useRef();\n  const pathRef = useRef();\n  useEffect(() => {\n    const waveForm = new WaveForm(track);\n    waveForm.draw({ svgBox: svgRef.current, pathGroup: pathRef.current });\n  }, [svgRef, pathRef, track]);\n\n  return (\n    <StyledTrack color={color}>\n      <svg ref={svgRef} preserveAspectRatio=\"none\">\n        <g ref={pathRef}></g>\n      </svg>\n    </StyledTrack>\n  );\n}","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport TrackController from 'components/TrackController';\nimport WaveFormViewer from 'components/WaveFormViewer';\nimport { AsideDefaultWidth, TimelineDefaultWidth, WaveFormColors } from 'src/constants';\n\nconst mapStateToProps = ({ tracks }) => {\n  return { tracks };\n};\n\nconst StyledTrackBars = styled.div`\n  background-color: #111111;\n  height: 100vh;\n  ul {\n    margin: 0;\n    padding: 0;\n  }\n  .track-control {\n    background-color: #222222;\n    padding: .5rem;\n  }\n  .waveform-control {}\n`;\n\nfunction TrackBars (props) {\n  return (\n    <StyledTrackBars>\n      <ul>\n        {props.tracks.map((track, index) => {\n          return (\n            <li key={track.id}>\n              <Row noGutters={true}>\n                <Col xs={AsideDefaultWidth} className=\"track-control\">\n                  <TrackController\n                    trackId={track.id}\n                    trackName={track.name}\n                    effects={track.effects} />\n                </Col>\n                <Col xs={TimelineDefaultWidth} className=\"waveform-control\">\n                  <WaveFormViewer track={track} color={WaveFormColors[index % WaveFormColors.length]} />\n                </Col>\n              </Row>\n            </li>\n          );\n        })}\n      </ul>\n    </StyledTrackBars>\n  );\n}\n\nexport default connect(mapStateToProps)(TrackBars);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Header from 'src/components/Header';\nimport SubHeader from 'components/SubHeader';\nimport TrackBars from 'components/TrackBars';\n\nconst StyledContainer = styled.div`\n  > .container-fluid {\n    padding: 0;\n  }\n`;\n\nexport default function Editor () {\n  return (\n    <StyledContainer>\n      <Container fluid={true}>\n        <Row noGutters={true}>\n          <Col xs={12}>\n            <Header />\n          </Col>\n        </Row>\n        <SubHeader />\n        <TrackBars />\n      </Container>\n    </StyledContainer>\n  );\n}","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport Editor from 'src/components/Editor';\n\nfunction App () {\n  return (\n    <div className=\"App\">\n      <Editor />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve audio-samples; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as types from 'src/actions/actionTypes';\n\nconst initialState = {\n  audioContext: new AudioContext(),\n  tracks: [],\n};\n\nconst trackReducer = (state, action) => {\n  switch (action.type) {\n    case types.ADD_AUDIO_TRACK:\n      return [...state, action.payload.audioTrack];\n    case types.REMOVE_TRACK:\n      return state.filter(track => track.id !== action.payload.trackId);\n    case types.UPDATE_TRACK_NAME:\n      state\n        .find(track => track.id === action.payload.trackId)\n        .setName(action.payload.trackName);\n      return [...state];\n    case types.ADD_EFFECT:\n      state\n        .find(track => track.id === action.payload.trackId)\n        .addEffect(action.payload.effector);\n      return [...state];\n    case types.CHANGE_EFFECT:\n      state\n        .find(track => track.id === action.payload.trackId)\n        .changeEffect(action.payload.effectId, action.payload.newEffector);\n      return [...state];\n    case types.REMOVE_EFFECT:\n      state\n        .find(track => track.id === action.payload.trackId)\n        .removeEffect(action.payload.effectId);\n      return [...state];\n    case types.PLAY_ALL_TRACKS:\n      return state.map(track => {\n        track.play();\n        return track;\n      });\n    case types.STOP_ALL_TRACKS:\n      return state.map(track => {\n        track.stop();\n        return track;\n      });\n    default: break;\n  }\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.ADD_AUDIO_TRACK:\n    case types.UPDATE_TRACK_NAME:\n    case types.REMOVE_TRACK:\n    case types.ADD_EFFECT:\n    case types.CHANGE_EFFECT:\n    case types.REMOVE_EFFECT:\n    case types.PLAY_ALL_TRACKS:\n    case types.STOP_ALL_TRACKS:\n      return {\n        ...state,\n        tracks: trackReducer(state.tracks, action),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport reducers from 'src/reducers';\n\nconst logger = createLogger();\nexport default createStore(reducers, applyMiddleware(logger));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'normalize.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from 'src/store';\n\nReactDOM.render((\n  <Provider store={store}>\n    <App />\n  </Provider>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}